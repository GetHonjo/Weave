// -----------------------------------------------------------------------
// <auto-generated>
//   This code was generated by Weave 1.1.3.0
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------

namespace
    #line 1 "_config.weave"
           Weave.Compiler
    #line default
{
    using System;
    using System.IO;
    using
        #line 2 "_config.weave"
       Weave.Expressions
        #line default
        ;

    partial class
    Templates
    {
        [System.CodeDom.Compiler.GeneratedCode("Weave", "1.1.3.0")]
        public
        void
        RenderWrapIfElement
            (
            #line 1 "WrapIfElement.weave"
       WrapIfElement
            #line default
            model, TextWriter writer, string indentation = null)
        {
            var __encode = new Func<object, string>(
                #line 4 "_config.weave"
        ToLiteral
                #line default
                );
            var __originalIndentation = indentation = indentation ?? string.Empty;
            var __temp0 = indentation;
            #line 3 "WrapIfElement.weave"
   var flag = this.CreateVariable("flag"); 
            #line default
            indentation = __temp0;
            writer.Write(indentation);
            writer.Write("var ");
            writer.Write(
                #line 4 "WrapIfElement.weave"
        flag 
                #line default
                );
            writer.Write(" =");
            writer.WriteLine();
            indentation = __originalIndentation + "    ";
            var __model0 =
                #line 5 "WrapIfElement.weave"
                  model.Expression
                #line default
                ;
            RenderCode(__model0, writer, indentation);
            writer.Write(indentation);
            writer.Write(";");
            writer.WriteLine();
            indentation = __originalIndentation;
            writer.Write(indentation);
            writer.Write("if (");
            writer.Write(
                #line 7 "WrapIfElement.weave"
        flag 
                #line default
                );
            writer.Write(")");
            writer.WriteLine();
            writer.Write(indentation);
            writer.Write("{");
            writer.WriteLine();
            indentation = __originalIndentation + "    ";
            var __model1 =
                #line 9 "WrapIfElement.weave"
                    model.Before
                #line default
                ;
            WalkElements(__model1, writer, indentation);
            indentation = __originalIndentation;
            writer.Write(indentation);
            writer.Write("}");
            writer.WriteLine();
            writer.WriteLine();
            var __model2 =
                #line 12 "WrapIfElement.weave"
                new[] { model.Body } 
                #line default
                ;
            WalkElements(__model2, writer, indentation);
            writer.WriteLine();
            writer.Write(indentation);
            writer.Write("if (");
            writer.Write(
                #line 14 "WrapIfElement.weave"
        flag 
                #line default
                );
            writer.Write(")");
            writer.WriteLine();
            writer.Write(indentation);
            writer.Write("{");
            writer.WriteLine();
            indentation = __originalIndentation + "    ";
            var __model3 =
                #line 16 "WrapIfElement.weave"
                    model.After
                #line default
                ;
            WalkElements(__model3, writer, indentation);
            indentation = __originalIndentation;
            writer.Write(indentation);
            writer.Write("}");
            writer.WriteLine();
        }
    }
}
