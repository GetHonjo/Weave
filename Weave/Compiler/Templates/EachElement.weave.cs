// -----------------------------------------------------------------------
// <auto-generated>
//   This code was generated by Weave 1.0.0.0
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------

namespace 
#line 1 "EachElement.weave"
           Weave.Compiler
#line default


{
    using System.IO;
        using 
#line 4 "EachElement.weave"
       Weave.Expressions
#line default

;

        
 partial class     Templates

    {
        [System.CodeDom.Compiler.GeneratedCode("Weave", "1.0.0.0")]
        public void 
#line 2 "EachElement.weave"
            RenderEachElement
#line default

(
#line 3 "EachElement.weave"
       EachElement
#line default

 model, TextWriter writer, string indentation = null)
        {
            indentation = indentation ?? string.Empty;
var temp0 = indentation;

#line 6 "EachElement.weave"
  
    var flag = this.CreateVariable("_flag");

#line default

indentation = temp0;
writer.WriteLine();
    if (
#line 10 "EachElement.weave"
     model.NoneBody != null
#line default

)
{
    writer.Write(indentation);
    writer.Write("    ");
writer.Write("bool ");
writer.Write(
#line 11 "EachElement.weave"
             flag 
#line default

);
writer.Write(";");
writer.WriteLine();
}
writer.WriteLine();
writer.Write("foreach (var ");
var temp1 = indentation;

#line 14 "EachElement.weave"
                this.RenderCode(model.EachBody.Expression, writer); 
#line default

indentation = temp1;
writer.Write(")");
writer.WriteLine();
writer.Write("{");
writer.WriteLine();
    if (
#line 16 "EachElement.weave"
         model.NoneBody != null
#line default

)
{
    writer.Write(indentation);
    writer.Write("        ");
writer.Write(
#line 17 "EachElement.weave"
            flag 
#line default

);
writer.Write(" = true;");
writer.WriteLine();
}
writer.WriteLine();
var temp2 = indentation;
    indentation += "    ";

#line 20 "EachElement.weave"
       this.WalkElements(model.EachBody.Body); 
#line default

indentation = temp2;
writer.Write("}");
writer.WriteLine();
writer.WriteLine();
    if (
#line 23 "EachElement.weave"
     model.NoneBody != null
#line default

)
{
    writer.Write(indentation);
    writer.Write("    ");
writer.Write("if (!");
writer.Write(
#line 24 "EachElement.weave"
             flag 
#line default

);
writer.Write(")");
writer.WriteLine();
    writer.Write(indentation);
    writer.Write("    ");
writer.Write("{");
writer.WriteLine();
var temp3 = indentation;
    indentation += "        ";

#line 26 "EachElement.weave"
           this.WalkElements(model.NoneBody.Body); 
#line default

indentation = temp3;
    writer.Write(indentation);
    writer.Write("    ");
writer.Write("}");
writer.WriteLine();
}
        }
    }
}