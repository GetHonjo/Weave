// -----------------------------------------------------------------------
// <auto-generated>
//   This code was generated by Weave 1.0.0.0
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------

namespace 
#line 1 "Template.weave"
           Weave.Compiler
#line default


{
    using System.IO;
        using 
#line 4 "Template.weave"
       System.Linq
#line default

;
        using 
#line 5 "Template.weave"
       System.Reflection
#line default

;
        using 
#line 6 "Template.weave"
       Weave.Expressions
#line default

;

        
 partial class     Templates

    {
        [System.CodeDom.Compiler.GeneratedCode("Weave", "1.0.0.0")]
        public void 
#line 2 "Template.weave"
            RenderTemplate
#line default

(
#line 3 "Template.weave"
       Template
#line default

 model, TextWriter writer)
        {

#line 8 "Template.weave"
  
    var settings = model.Settings.ToLookup(s => s.Key.Value, s => (object)s.Value);
    var @namespace = settings["namespace"].Single();
    var accessibility = settings["accessibility"].SingleOrDefault() ?? string.Empty;
    var className = settings["classname"].SingleOrDefault() ?? "Templates";
    var methodName = settings["methodname"].SingleOrDefault() ?? "Render";
    var modelName = settings["model"].SingleOrDefault() ?? "dynamic";
    var assemblyName = Assembly.GetExecutingAssembly().GetName();

#line default

writer.Write("// -----------------------------------------------------------------------");
writer.Write("\r\n");
writer.Write("// <auto-generated>");
writer.Write("\r\n");
writer.Write("//   This code was generated by ");
writer.Write(
#line 19 "Template.weave"
                                    assemblyName.Name 
#line default

);
writer.Write(" ");
writer.Write(
#line 19 "Template.weave"
                                                             assemblyName.Version 
#line default

);
writer.Write("\r\n");
writer.Write("//");
writer.Write("\r\n");
writer.Write("//   Changes to this file may cause incorrect behavior and will be lost if");
writer.Write("\r\n");
writer.Write("//   the code is regenerated.");
writer.Write("\r\n");
writer.Write("// </auto-generated>");
writer.Write("\r\n");
writer.Write("// -----------------------------------------------------------------------");
writer.Write("\r\n");
writer.Write("\r\n");
writer.Write("namespace ");

#line 26 "Template.weave"
             this.RenderCode(@namespace, writer); 
#line default

writer.Write("\r\n");
writer.Write("{");
writer.Write("\r\n");
writer.Write("    using System.IO;");
writer.Write("\r\n");


foreach (var 
#line 29 "Template.weave"
           @using in settings["using"]
#line default

)
{

writer.Write("        using ");

#line 30 "Template.weave"
                 this.RenderCode(@using, writer); 
#line default

writer.Write(";");
writer.Write("\r\n");
}

writer.Write("\r\n");
writer.Write("    ");

#line 33 "Template.weave"
       this.RenderCode(accessibility, writer); 
#line default

writer.Write(" partial class ");

#line 33 "Template.weave"
                                                                   this.RenderCode(className, writer); 
#line default

writer.Write("\r\n");
writer.Write("    {");
writer.Write("\r\n");
writer.Write("        [System.CodeDom.Compiler.GeneratedCode(\"");
writer.Write(
#line 35 "Template.weave"
                                                    assemblyName.Name 
#line default

);
writer.Write("\", \"");
writer.Write(
#line 35 "Template.weave"
                                                                                assemblyName.Version 
#line default

);
writer.Write("\")]");
writer.Write("\r\n");
writer.Write("        public void ");

#line 36 "Template.weave"
                       this.RenderCode(methodName, writer); 
#line default

writer.Write("(");

#line 36 "Template.weave"
                                                                  this.RenderCode(modelName, writer); 
#line default

writer.Write(" model, TextWriter writer)");
writer.Write("\r\n");
writer.Write("        {");
writer.Write("\r\n");

#line 38 "Template.weave"
               base.WalkTemplate(model); 
#line default

writer.Write("        }");
writer.Write("\r\n");
writer.Write("    }");
writer.Write("\r\n");
writer.Write("}");
writer.Write("");
        }
    }
}